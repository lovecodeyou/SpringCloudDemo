#----配置服务名称及端口----
spring.application.name=eurekaServer
server.port=1111
#----服务注册中心配置----
#服务注册中心实例的主机名
eureka.instance.hostname=localhost
#是否向服务注册中心注册自己,默认为true
eureka.client.register-with-eureka=false
#由于注册中心的职责是维护服务实例,它并不需要去检索服务,所以也设置为false
eureka.client.fetch-registry=false
#服务注册中心的配置内容，指定服务注册中心的位置
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/

eureka.server.enable-self-preservation=false
#配置服务名称以端口
#spring.application.name=eurekaServer

#服务中心的配置（中介）
#eureka.instance.hostname=localhost

#指示此实例是否应将其信息注册到eureka服务器以供他人发现。在某些情况下，您不希望发现自己的实例，而只希望发现其他实例。
#eureka.client.register-with-eureka=false

#指示此客户端是否应从eureka服务器获取eureka注册表信息
#eureka.client.fetch-registry=false




#关闭中介的 服务联系信息自我保护功能 --  只要服务没在90s内发送心跳包则直接从中介删除该服务联系信息
#eureka.server.enable-self-preservation=true

#注册中心检查服务的存活时间
#eureka.server.eviction-interval-timer-in-ms=1000


#下列3个属性可不用设置，直接使用默认即可  -- 设置在服务客户端配置中的
#服务失效时间 -- 90s内没接收到心跳包，则该服务进入自我保护功能 -- 服务90s后自动删除（接收心跳包从重新刷新时间）
#eureka.instance.lease-expiration-duration-in-seconds=90

#服务每隔几秒发送心跳包进行验证该服务还能进行提供使用 -- （服务30s内发送心跳包证明自己存活）
###eurek.instance.lease-renewal-interval-in-seconds=30

#服务会缓存中介的服务联系信息，每隔几秒服务会从中介进拉取信息更新服务的联系信息 -- （）
#eureka.client.registry-fetch-interval-seconds=30


#spring.cloud.inetutils.timeout-seconds=60

#spring.profiles.active=product
